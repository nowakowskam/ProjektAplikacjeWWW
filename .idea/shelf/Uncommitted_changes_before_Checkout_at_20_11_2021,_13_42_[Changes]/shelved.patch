Index: AnimalsHotel/service/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render\nfrom django.http import HttpResponse\nfrom rest_framework.decorators import api_view\nfrom rest_framework.response import Response\nfrom .serializer import RoomSerializer\nfrom .models import Room\n\n\n@api_view([\"GET\"])\ndef api_overview(request):\n    api_urls = {\n        \"List\": \"/room-list/\",\n        \"Detail View\": \"/room-detail/<str:pk>/\",\n        \"Create\": \"/room-create/\",\n        \"Update\": \"/room-update/<str:pk>/\",\n        \"Delete\": \"/room-delete/<str:pk>/\",\n    }\n\n    return Response(api_urls)\n\n\n@api_view([\"GET\"])\ndef room_list(request):\n    rooms = Room.objects.all().order_by(\"-id\")\n    serializer = RoomSerializer(rooms, many=True)\n    return Response(serializer.data)\n\n\n@api_view([\"GET\"])\ndef room_detail(request, pk):\n    rooms = Room.objects.get(id=pk)\n    serializer = RoomSerializer(rooms, many=False)\n    return Response(serializer.data)\n\n\n@api_view([\"POST\"])\ndef room_create(request):\n    serializer = RoomSerializer(data=request.data)\n\n    if serializer.is_valid():\n        serializer.save()\n\n    return Response(serializer.data)\n\n\n@api_view([\"POST\"])\ndef room_update(request, pk):\n    room = Room.objects.get(id=pk)\n    serializer = RoomSerializer(instance=room, data=request.data)\n\n    if serializer.is_valid():\n        serializer.save()\n\n    return Response(serializer.data)\n\n\n@api_view([\"DELETE\"])\ndef room_delete(request, pk):\n    room = Room.objects.get(id=pk)\n    room.delete()\n\n    return Response(\"Item succsesfully delete!\")\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/AnimalsHotel/service/views.py b/AnimalsHotel/service/views.py
--- a/AnimalsHotel/service/views.py	
+++ b/AnimalsHotel/service/views.py	
@@ -2,10 +2,9 @@
 from django.http import HttpResponse
 from rest_framework.decorators import api_view
 from rest_framework.response import Response
-from .serializer import RoomSerializer
+from .serializer import *
 from .models import Room
 
-
 @api_view(["GET"])
 def api_overview(request):
     api_urls = {
